// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: participant.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Model definitions for BPJS Participant
type COB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsuraneName   string `protobuf:"bytes,1,opt,name=insuraneName,proto3" json:"insuraneName,omitempty"`
	InsuraneNumber string `protobuf:"bytes,2,opt,name=insuraneNumber,proto3" json:"insuraneNumber,omitempty"`
	TatDate        string `protobuf:"bytes,3,opt,name=tatDate,proto3" json:"tatDate,omitempty"`
	TmtDate        string `protobuf:"bytes,4,opt,name=tmtDate,proto3" json:"tmtDate,omitempty"`
}

func (x *COB) Reset() {
	*x = COB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *COB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*COB) ProtoMessage() {}

func (x *COB) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use COB.ProtoReflect.Descriptor instead.
func (*COB) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{0}
}

func (x *COB) GetInsuraneName() string {
	if x != nil {
		return x.InsuraneName
	}
	return ""
}

func (x *COB) GetInsuraneNumber() string {
	if x != nil {
		return x.InsuraneNumber
	}
	return ""
}

func (x *COB) GetTatDate() string {
	if x != nil {
		return x.TatDate
	}
	return ""
}

func (x *COB) GetTmtDate() string {
	if x != nil {
		return x.TmtDate
	}
	return ""
}

type Information struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dinsos      string `protobuf:"bytes,1,opt,name=dinsos,proto3" json:"dinsos,omitempty"`
	SKTMNumber  string `protobuf:"bytes,2,opt,name=SKTMNumber,proto3" json:"SKTMNumber,omitempty"`
	ProlanisPRB string `protobuf:"bytes,3,opt,name=prolanisPRB,proto3" json:"prolanisPRB,omitempty"`
}

func (x *Information) Reset() {
	*x = Information{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Information) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Information) ProtoMessage() {}

func (x *Information) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Information.ProtoReflect.Descriptor instead.
func (*Information) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{1}
}

func (x *Information) GetDinsos() string {
	if x != nil {
		return x.Dinsos
	}
	return ""
}

func (x *Information) GetSKTMNumber() string {
	if x != nil {
		return x.SKTMNumber
	}
	return ""
}

func (x *Information) GetProlanisPRB() string {
	if x != nil {
		return x.ProlanisPRB
	}
	return ""
}

type BPJSMedicalRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MRNumber    string `protobuf:"bytes,1,opt,name=MRNumber,proto3" json:"MRNumber,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *BPJSMedicalRecord) Reset() {
	*x = BPJSMedicalRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPJSMedicalRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPJSMedicalRecord) ProtoMessage() {}

func (x *BPJSMedicalRecord) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPJSMedicalRecord.ProtoReflect.Descriptor instead.
func (*BPJSMedicalRecord) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{2}
}

func (x *BPJSMedicalRecord) GetMRNumber() string {
	if x != nil {
		return x.MRNumber
	}
	return ""
}

func (x *BPJSMedicalRecord) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type ProvUmum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderCode string `protobuf:"bytes,1,opt,name=providerCode,proto3" json:"providerCode,omitempty"`
	ProviderName string `protobuf:"bytes,2,opt,name=providerName,proto3" json:"providerName,omitempty"`
}

func (x *ProvUmum) Reset() {
	*x = ProvUmum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvUmum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvUmum) ProtoMessage() {}

func (x *ProvUmum) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvUmum.ProtoReflect.Descriptor instead.
func (*ProvUmum) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{3}
}

func (x *ProvUmum) GetProviderCode() string {
	if x != nil {
		return x.ProviderCode
	}
	return ""
}

func (x *ProvUmum) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

type PatientAge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeNow       string `protobuf:"bytes,1,opt,name=ageNow,proto3" json:"ageNow,omitempty"`
	AgeAtService string `protobuf:"bytes,2,opt,name=ageAtService,proto3" json:"ageAtService,omitempty"`
}

func (x *PatientAge) Reset() {
	*x = PatientAge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientAge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientAge) ProtoMessage() {}

func (x *PatientAge) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientAge.ProtoReflect.Descriptor instead.
func (*PatientAge) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{4}
}

func (x *PatientAge) GetAgeNow() string {
	if x != nil {
		return x.AgeNow
	}
	return ""
}

func (x *PatientAge) GetAgeAtService() string {
	if x != nil {
		return x.AgeAtService
	}
	return ""
}

// Reusable by multiple objects inside the BPJS Participant
type ReusableNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Note string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *ReusableNote) Reset() {
	*x = ReusableNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReusableNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReusableNote) ProtoMessage() {}

func (x *ReusableNote) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReusableNote.ProtoReflect.Descriptor instead.
func (*ReusableNote) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{5}
}

func (x *ReusableNote) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReusableNote) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type BPJSParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nik               string             `protobuf:"bytes,2,opt,name=nik,proto3" json:"nik,omitempty"`
	CardNumber        string             `protobuf:"bytes,3,opt,name=cardNumber,proto3" json:"cardNumber,omitempty"`
	Pisa              string             `protobuf:"bytes,4,opt,name=pisa,proto3" json:"pisa,omitempty"`
	Sex               string             `protobuf:"bytes,5,opt,name=sex,proto3" json:"sex,omitempty"`
	TatDate           string             `protobuf:"bytes,6,opt,name=tatDate,proto3" json:"tatDate,omitempty"`
	TmtDate           string             `protobuf:"bytes,7,opt,name=tmtDate,proto3" json:"tmtDate,omitempty"`
	Dob               string             `protobuf:"bytes,8,opt,name=dob,proto3" json:"dob,omitempty"`
	CardPrintDate     string             `protobuf:"bytes,9,opt,name=cardPrintDate,proto3" json:"cardPrintDate,omitempty"`
	Cob               *COB               `protobuf:"bytes,10,opt,name=cob,proto3" json:"cob,omitempty"`
	ClassRights       *ReusableNote      `protobuf:"bytes,11,opt,name=classRights,proto3" json:"classRights,omitempty"`
	Information       *Information       `protobuf:"bytes,12,opt,name=information,proto3" json:"information,omitempty"`
	ParticipantType   *ReusableNote      `protobuf:"bytes,13,opt,name=participantType,proto3" json:"participantType,omitempty"`
	MedicalRecord     *BPJSMedicalRecord `protobuf:"bytes,14,opt,name=medicalRecord,proto3" json:"medicalRecord,omitempty"`
	ProvUmum          *ProvUmum          `protobuf:"bytes,15,opt,name=provUmum,proto3" json:"provUmum,omitempty"`
	ParticipantStatus *ReusableNote      `protobuf:"bytes,16,opt,name=participantStatus,proto3" json:"participantStatus,omitempty"`
	Age               *PatientAge        `protobuf:"bytes,17,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *BPJSParticipant) Reset() {
	*x = BPJSParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_participant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPJSParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPJSParticipant) ProtoMessage() {}

func (x *BPJSParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_participant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPJSParticipant.ProtoReflect.Descriptor instead.
func (*BPJSParticipant) Descriptor() ([]byte, []int) {
	return file_participant_proto_rawDescGZIP(), []int{6}
}

func (x *BPJSParticipant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BPJSParticipant) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *BPJSParticipant) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *BPJSParticipant) GetPisa() string {
	if x != nil {
		return x.Pisa
	}
	return ""
}

func (x *BPJSParticipant) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *BPJSParticipant) GetTatDate() string {
	if x != nil {
		return x.TatDate
	}
	return ""
}

func (x *BPJSParticipant) GetTmtDate() string {
	if x != nil {
		return x.TmtDate
	}
	return ""
}

func (x *BPJSParticipant) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *BPJSParticipant) GetCardPrintDate() string {
	if x != nil {
		return x.CardPrintDate
	}
	return ""
}

func (x *BPJSParticipant) GetCob() *COB {
	if x != nil {
		return x.Cob
	}
	return nil
}

func (x *BPJSParticipant) GetClassRights() *ReusableNote {
	if x != nil {
		return x.ClassRights
	}
	return nil
}

func (x *BPJSParticipant) GetInformation() *Information {
	if x != nil {
		return x.Information
	}
	return nil
}

func (x *BPJSParticipant) GetParticipantType() *ReusableNote {
	if x != nil {
		return x.ParticipantType
	}
	return nil
}

func (x *BPJSParticipant) GetMedicalRecord() *BPJSMedicalRecord {
	if x != nil {
		return x.MedicalRecord
	}
	return nil
}

func (x *BPJSParticipant) GetProvUmum() *ProvUmum {
	if x != nil {
		return x.ProvUmum
	}
	return nil
}

func (x *BPJSParticipant) GetParticipantStatus() *ReusableNote {
	if x != nil {
		return x.ParticipantStatus
	}
	return nil
}

func (x *BPJSParticipant) GetAge() *PatientAge {
	if x != nil {
		return x.Age
	}
	return nil
}

var File_participant_proto protoreflect.FileDescriptor

var file_participant_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x70, 0x6a, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x03, 0x43, 0x4f,
	0x42, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6d, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6d, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x67, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x6e, 0x73, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x69, 0x6e, 0x73, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x4b, 0x54, 0x4d,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x4b,
	0x54, 0x4d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6c,
	0x61, 0x6e, 0x69, 0x73, 0x50, 0x52, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6c, 0x61, 0x6e, 0x69, 0x73, 0x50, 0x52, 0x42, 0x22, 0x51, 0x0a, 0x11, 0x42, 0x50,
	0x4a, 0x53, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x52, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4d, 0x52, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x52, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x55, 0x6d, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x48, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x67, 0x65, 0x41, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x0c, 0x52,
	0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x22, 0x80, 0x05, 0x0a, 0x0f, 0x42, 0x50, 0x4a, 0x53, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x69, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x69, 0x73, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x73,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x6d, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6d, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72,
	0x64, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x03, 0x63, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x62,
	0x70, 0x6a, 0x73, 0x2e, 0x43, 0x4f, 0x42, 0x52, 0x03, 0x63, 0x6f, 0x62, 0x12, 0x34, 0x0a, 0x0b,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x70, 0x6a, 0x73, 0x2e, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x70, 0x6a, 0x73, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x70, 0x6a, 0x73, 0x2e, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x70, 0x6a, 0x73, 0x2e, 0x42, 0x50, 0x4a, 0x53, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x55, 0x6d, 0x75, 0x6d,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x70, 0x6a, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x55, 0x6d, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x55, 0x6d, 0x75, 0x6d,
	0x12, 0x40, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x70,
	0x6a, 0x73, 0x2e, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x70, 0x6a, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x67,
	0x65, 0x52, 0x03, 0x61, 0x67, 0x65, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_participant_proto_rawDescOnce sync.Once
	file_participant_proto_rawDescData = file_participant_proto_rawDesc
)

func file_participant_proto_rawDescGZIP() []byte {
	file_participant_proto_rawDescOnce.Do(func() {
		file_participant_proto_rawDescData = protoimpl.X.CompressGZIP(file_participant_proto_rawDescData)
	})
	return file_participant_proto_rawDescData
}

var file_participant_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_participant_proto_goTypes = []interface{}{
	(*COB)(nil),               // 0: bpjs.COB
	(*Information)(nil),       // 1: bpjs.Information
	(*BPJSMedicalRecord)(nil), // 2: bpjs.BPJSMedicalRecord
	(*ProvUmum)(nil),          // 3: bpjs.ProvUmum
	(*PatientAge)(nil),        // 4: bpjs.PatientAge
	(*ReusableNote)(nil),      // 5: bpjs.ReusableNote
	(*BPJSParticipant)(nil),   // 6: bpjs.BPJSParticipant
}
var file_participant_proto_depIdxs = []int32{
	0, // 0: bpjs.BPJSParticipant.cob:type_name -> bpjs.COB
	5, // 1: bpjs.BPJSParticipant.classRights:type_name -> bpjs.ReusableNote
	1, // 2: bpjs.BPJSParticipant.information:type_name -> bpjs.Information
	5, // 3: bpjs.BPJSParticipant.participantType:type_name -> bpjs.ReusableNote
	2, // 4: bpjs.BPJSParticipant.medicalRecord:type_name -> bpjs.BPJSMedicalRecord
	3, // 5: bpjs.BPJSParticipant.provUmum:type_name -> bpjs.ProvUmum
	5, // 6: bpjs.BPJSParticipant.participantStatus:type_name -> bpjs.ReusableNote
	4, // 7: bpjs.BPJSParticipant.age:type_name -> bpjs.PatientAge
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_participant_proto_init() }
func file_participant_proto_init() {
	if File_participant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_participant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*COB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_participant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Information); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_participant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPJSMedicalRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_participant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvUmum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_participant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientAge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_participant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReusableNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_participant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPJSParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_participant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_participant_proto_goTypes,
		DependencyIndexes: file_participant_proto_depIdxs,
		MessageInfos:      file_participant_proto_msgTypes,
	}.Build()
	File_participant_proto = out.File
	file_participant_proto_rawDesc = nil
	file_participant_proto_goTypes = nil
	file_participant_proto_depIdxs = nil
}
